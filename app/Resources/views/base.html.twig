<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{% block title %}Meeteo{% endblock %}</title>
  {% block stylesheets %}
  <link rel="stylesheet" href="{{asset('main/font-awesome/css/font-awesome.min.css')}}">
  <link rel="stylesheet" href="{{asset('main/bootstrap/css/bootstrap.min.css')}}">
  <link rel="stylesheet" href="{{asset('main/css/main.css')}}">
{% endblock %}
<link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />
</head>
<body>

{% block header %}

<nav class="navbar navbar-default">
  <div class="container">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="/"><i class="fa fa-sun-o" aria-hidden="true"></i> Meeteo</a>
    </div>

    <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
      {% block map %}
      <form class="navbar-form navbar-left" role="search">
        <div class="form-group">
          <input id="pac-input" type="text" class="form-control controls" placeholder="Rechercher">
        </div>
      </form>
      {% endblock map %}

      <ul class="nav navbar-nav navbar-right">

        {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}

        <li>
          <a href="/" title="Accueil"><i class="fa fa-home" aria-hidden="true"></i> Accueil</a>
        </li>
        <li>
          <a href="#" onclick="redirectToRoute()"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Notifier</a>
        </li>
        {% if is_granted('ROLE_ADMIN') %}
        <li>
          <a href="/Manage"><i class="fa fa-wrench" aria-hidden="true"></i> Gestion</a>
        </li>
        {% endif %}
        <li>
          <a href="/profile" title="Profil"><i class="fa fa-user" aria-hidden="true"></i> {{ app.user.username }}</a>
        </li>
        <li class="dropdown">
          <a href="" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false" title="Paramètres"><i class="fa fa-caret-down" aria-hidden="true"></i></a>
          <ul class="dropdown-menu">
            <li><a href="/profile/change-password">Modifier mot de passe</a></li>
            <li><a href="/profile/edit">Modifier compte</a></li>
            <li><a href="{{ path('fos_user_security_logout') }}">Déconnexion <i class="fa fa-sign-out" aria-hidden="true"></i></a></li>
          </ul>
        </li>

        {% else %}

        <li><a href="/login"><i class="fa fa-sign-in" aria-hidden="true"></i> Connexion</a></li>
        <li><a href="/register"><i class="fa fa-edit" aria-hidden="true"></i> Inscription</a></li>

        {% endif %}
      </ul>
    </div>
  </div>
</nav>

{% endblock %}

{% block body %}
<div id="map"></div>

<script>
// DEBUT GOOGLE MAP API
function initMap() {
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: -21.10972, lng: 55.49639},
    zoom: 10,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });
  var infoWindow = new google.maps.InfoWindow({map: map});
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      infoWindow.setPosition(pos);
      infoWindow.setContent('Vous etes ici');
      map.setCenter(pos);
      map.setZoom(13);
    }, function() {
      handleLocationError(true, infoWindow, map.getCenter());
    });
  } else {
    handleLocationError(false, infoWindow, map.getCenter());
  }
  // DEBUT SEARCH GOOGLE MAP
  // Create the search box and link it to the UI element.
  var input = document.getElementById('pac-input');
  var searchBox = new google.maps.places.SearchBox(input);
  //  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  // Bias the SearchBox results towards current map's viewport.
  map.addListener('bounds_changed', function() {
    searchBox.setBounds(map.getBounds());
  });
  var markers = [];
  // Listen for the event fired when the user selects a prediction and retrieve
  // more details for that place.
  searchBox.addListener('places_changed', function() {
    var places = searchBox.getPlaces();
    if (places.length == 0) {
      return;
    }
    // Clear out the old markers.
    markers.forEach(function(marker) {
      marker.setMap(null);
    });
    markers = [];
    // For each place, get the icon, name and location.
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };
      // Create a marker for each place.
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: place.name,
        position: place.geometry.location
      }));
      if (place.geometry.viewport) {
        // Only geocodes have viewport.
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }
    });
    map.fitBounds(bounds);
  });
  // FIN SEARCH GOOGLE MAP
  // DEBUT MARKER REPORT
  setMarkers(map);
}
var listeReports = [{% for report in listereports %}
  [ {{report.lat}}, {{report.lon }},{{report.weather}} ,{{report.temperature}},{{report.wind}}],
  {% endfor %}];

  function setMarkers(map) {
    var image = {
      scaledSize: new google.maps.Size(50,50), // scaled size
      origin: new google.maps.Point(0,0), // origin
      anchor: new google.maps.Point(0, 0) // anchor
    };
    for (var i = 0; i < listeReports.length; i++) {
      if(listeReports[i][2] === 0 ){
        image.url = "images/tick/sunny.png";
      }
      else if(listeReports[i][2] === 1 ) {
        image.url = "images/tick/cloudy4.png";
      }
      else if(listeReports[i][2] === 2) {
        image.url = "images/tick/shower4.png";
      }
      else if(listeReports[i][2] === 3) {
        image.url = "images/tick/overcast.png";
      }
      else if(listeReports[i][2] === 4) {
        image.url = "images/tick/snow4.png";
      }
      else if(listeReports[i][2] === 5) {
        image.url = "images/tick/hail.png";
      }

      var contentString = '<div id="content">'+
      '<div id="siteNotice">'+
      '</div>'+
      '<h1 id="firstHeading" class="firstHeading">Info</h1>'+
      '<div id="bodyContent">'+ 'Météo : ' +
      listeReports[i][2] + ', Temperature : ' + listeReports[i][3] + ', Vent : ' + listeReports[i][4] +  '<img src="images/reports/'+listeReports[i][5]+'" />'+
      '</div>'+
      '</div>';
console.log(listeReports);
      var infowindow = new google.maps.InfoWindow({
        content: contentString,
      });

      var marker = new google.maps.Marker({
        position: {lat: listeReports[i][0], lng:listeReports[i][1]},
        map: map,
        icon : image,
        info: contentString
      });

      marker.addListener('click', function() {
        infowindow.setContent(this.info);
        infowindow.open(map, this);
      });

    }

  }
  // FIN MARKER REPORT
  function redirectToRoute() {
    document.location.href="/report/" + pos.lat + "/" + pos.lng;
  }
  function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
      'Error: The Geolocation service failed.' :
      'Error: Your browser doesn\'t support geolocation.');
    }
    // FIN GOOGLE MAP API
    </script>

    {% endblock %}

    {% block fos_user_content %}
    {% endblock %}


    {% block javascripts %}
    <script src="//code.jquery.com/jquery.min.js"></script>
    <script src="{{asset('main/bootstrap/js/bootstrap.min.js')}}"></script>
    <script src="{{asset('main/js/main.js')}}"></script>


    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcLrM9KgEVlnNV6FS4gkjN-_XGHReLIHg&libraries=places&callback=initAutocomplete&callback=initMap"
    async defer>
    </script>
  {% endblock %}


</body>
</html>
